#!/usr/bin/env bash
#
# Watch for changes in ~/Library/Preferences, print out diffs
# afterwards.  Used to figure out what preferences are changed when
# you click things in the GUI.

set -uo pipefail

PRINT_PLIST="$(dirname "$0")"/printplist.py

temp_dir=$(mktemp -d)
rm_temp_dir() {
	echo "Cleaning up"
	rm -rf "$temp_dir"
}
trap rm_temp_dir EXIT

rsync -av --include=**/ --include=Preferences/**.plist --exclude=* \
      --prune-empty-dirs ~/Library/ "$temp_dir/"
if [[ $? != 0 && $? != 23 ]]; then
	echo "rsync failed, exiting" >&2
	exit 1
fi
du -csh "$temp_dir"
echo "Watching, kill to compare"
change_log=$temp_dir/changed
# This shows all files changing, not just plists, so the user can be
# informed if "preferences" are being kept somewhere other than
# **/Preferences/**.plist.
fswatch -r ~/Library | tee "$change_log"
diff=$(mktemp)
while read -r file; do
	echo
	echo "########## $file"
	echo
	"$PRINT_PLIST" "$file" > "$temp_dir/after"
	old_file=$temp_dir/${file#$HOME/Library/}
	if [ ! -e "$old_file" ]; then
		echo "$file is new:"
		cat "$temp_dir/after"
	else
		"$PRINT_PLIST" "$old_file" > "$temp_dir/before"
		colordiff -y -W 200 "$temp_dir/before" "$temp_dir/after"
		echo diff "$file" >> "$diff"
		diff -u "$temp_dir/before" "$temp_dir/after" >> "$diff"
	fi
done < <(egrep '(^|/)Preferences/.*\.plist$' "$change_log" | sort -u)

echo
echo
echo "diff: $diff"
