- name: Install Google Chrome
  command:
    argv: ['{{macfit}}', --owner, '{{ansible_user}}',
           https://dl.google.com/chrome/mac/stable/GGRO/googlechrome.dmg]
    creates: /Applications/Google Chrome.app
  become: yes

- name: Install 1Password
  command:
    argv: ['{{ macfit }}', https://app-updates.agilebits.com/download/OPM7]
    creates: /Applications/1Password 7.app
  become: yes

- name: Install Witch
  command:
    argv: ['{{ macfit }}', -n, witch.dmg, https://manytricks.com/download/witch]
    creates: '{{ witch_prefpane }}'
  register: install_witch

# A little unfortunate that this is going to open up a GUI window?
# Maybe this is a bad idea?
- name: Run Witch after first installation
  command:
    argv: [open, '{{ witch_prefpane }}']
  when: install_witch is changed

- name: Install iTerm
  command:
    argv: ['{{ macfit }}', https://iterm2.com/downloads/stable/latest]
    creates: '{{ user_app_dir }}/iTerm.app'

- name: Set iTerm preferences
  x_osx_defaults:
    domain: com.googlecode.iterm2
    key: '{{ item.0 }}'
    type: '{{ item.1 }}'
    value: '{{ item.2 }}'
  loop:
    - [LoadPrefsFromCustomFolder, int, 1]
    - [PrefsCustomFolder, string, '{{ dropbox_dir }}/app_sync/iTerm']
    - [NoSyncNeverRemindPrefsChangesLostForFile, bool, true]
    - [NoSyncNeverRemindPrefsChangesLostForFile_selection, int, 0]

- debug: var=macos_dock_items

- name: Put iTerm on Dock
  command:
    argv: [dockutil, --add, '{{ user_app_dir }}/iTerm.app']
  when: '"iTerm" not in macos_dock_items'

- name: Install Alfred
  command:
    argv: ['{{ macfit }}', --scrape-html, 'https://.*/Alfred.*\.dmg$',
           https://www.alfredapp.com/]
    creates: '{{ user_app_dir }}/Alfred 4.app'

- name: Set Alfred preferences
  x_osx_defaults:
    domain: com.runningwithcrayons.Alfred-Preferences
    key: syncfolder
    type: string
    # Alfred seems to prefer this spelling, not an absolute path.
    value: '~/Dropbox'

- name: Install Dash
  command:
    argv: ['{{ macfit }}', 'https://newyork.kapeli.com/downloads/v4/Dash.zip']
    creates: '{{ user_app_dir }}/Dash.app'

# This didn't seem to work: sync is not set at startup.
- name: Set Dash preferences
  x_osx_defaults:
    domain: com.kapeli.dashdoc
    key: '{{ item.0 }}'
    type: '{{ item.1 }}'
    value: '{{ item.2 }}'
  loop:
    - [shouldSyncGeneral, int, 1]
    - [shouldSyncDocsets, int, 1]
    - [shouldSyncBookmarks, int, 1]
    - [syncFolderPath, string, '~/Dropbox/app_sync/Dash']
    - [DHNotificationNestedResultTip, bool, true]
    - [DHNotificationTableOfContentsTip, bool, true]
    - [DHNotificationFindTip, bool, true]

- name: Install Amphetamine
  command: mas install 937984704
  args:
    creates: /Applications/Amphetamine.app

- name: Set Amphetamine preferences
  x_osx_defaults:
    domain: /Users/dale/Library/Containers/com.if.Amphetamine/Data/Library/Preferences/com.if.Amphetamine
    key: '{{ item.0 }}'
    type: '{{ item.1 }}'
    value: '{{ item.2 }}'
  loop:
    - ["Default Duration", int, 14]
    - ["End Session On Low Battery", int, 1]
    - ["Hide Dock Icon", int, 1]
    - ["Icon Style", int, 5]
    - ["Ignore Battery on AC", int, 1]
    - ["Lower Icon Opacity", int, 1]
    - ["Session End Time Calcuation", int, 1]
    - ["Show Welcome Window", int, 0]

- name: Install BetterTouchTool
  command:
    argv: ['{{ macfit }}', https://bettertouchtool.net/releases/BetterTouchTool.zip]
    creates: '{{ user_app_dir }}/BetterTouchTool.app'

- name: Set BetterTouchTool preferences
  x_osx_defaults:
    domain: com.hegenberg.BetterTouchTool
    key: windowSnappingEnabled
    type: bool
    value: false

- name: Install iStat Menus
  command:
    argv: ['{{ macfit }}', https://download.bjango.com/istatmenus/]
    creates: '{{ user_app_dir }}/iStat Menus.app'

- name: Install Burp Suite Community Edition
  command:
    argv:
      - '{{ macfit }}'
      - --run-installer
      - 'Burp Suite Community Edition Installer.app/Contents/MacOS/JavaApplicationStub'
      - '["-q"]'
      - 'https://portswigger.net/burp/releases/download?product=community&type=macosx'
    creates: '{{ user_app_dir }}/Burp Suite Community Edition.app'

# Bartender's website won't talk to urllib2, but it will talk to Curl!  Weird!
- name: Install Bartender 3
  command:
    argv: ['{{ macfit }}', -U, 'curl/7.65.1',
           https://www.macbartender.com/Demo/Bartender%203.zip]
    creates: '{{ user_app_dir }}/Bartender 3.app'

- name: Install Hammerspoon
  command:
    argv: ['{{ macfit }}',
           --scrape-html, '^https://.*/Hammerspoon-[\d.]+\.zip$',
           'https://github.com/Hammerspoon/hammerspoon/releases/latest']
    creates: '{{ user_app_dir }}/Hammerspoon.app'
  register: hammerspoon

- name: Start Hammerspoon
  command:
    argv: [open, '{{ user_app_dir }}/Hammerspoon.app']
  when: hammerspoon is changed

- name: Install Textual
  command:
    argv: ['{{ macfit }}', --agree-eulas,
           -c, '{{ ansible_env.HOME }}/Downloads',
           https://www.codeux.com/textual/downloads/Textual7.dmg]
    creates: '{{ user_app_dir }}/Textual.app'

- name: Set Textual preferences
  x_osx_defaults:
    domain: com.codeux.apps.textual
    key: '{{ item.0 }}'
    type: '{{ item.1 }}'
    value: '{{ item.2 }}'
  loop:
    - [CopyTextSelectionOnMouseUp, bool, true]
    - [DefaultIdentity -> Nickname, string, dale]
    - [DefaultIdentity -> Realname, string, dale]
    - [DefaultIdentity -> Username, string, dale]
    - [DestinationOfNonserverNotices, int, 1]
    - [Keyboard -> Command+W Key Action, int, 1]
    - [Keyboard -> Tab Key Completion Suffix, string, ": "]
    - [ServerListDoubleClickConnectServer, bool, true]
    - [SUAutomaticallyUpdate, bool, false]
    - [SUEnableAutomaticChecks, bool, true]

- name: Install Moom
  command:
    argv: ['{{ macfit }}', https://manytricks.com/download/moom]
    creates: '{{ user_app_dir }}/Moom.app'

# Copying a working plist wholesale because there are a shitload of
# preferences to set otherwise, including a complicated array of
# custom commands.
- name: Install Moom settings
  copy:
    # Note: This file was produced from a working, configured install
    # of Moom with "plutil -convert xml1" on the *binary* plist file.
    src: com.manytricks.Moom.plist
    dest: '{{ ansible_env.HOME }}/Library/Preferences/'
    # Don't overwrite if the file exists.
    force: no

- name: Install VLC
  command:
    argv: ['{{ macfit }}', --scrape, '/vlc-[0-9.]+.dmg$',
           https://download.videolan.org/pub/videolan/vlc/last/macosx/]
    creates: '{{ user_app_dir }}/VLC.app'

- name: Install fre:ac 1.1
  command:
    argv: ['{{ macfit }}', --scrape, '/freac-1\.1.*-macosx.dmg$',
           https://www.freac.org/index.php/downloads-mainmenu-33]
    creates: '{{ user_app_dir }}/freac.app'

- name: Install OneNote
  command: mas install 784801555
  args:
    creates: /Applications/Microsoft OneNote.app

# Little Snitch aggressively requires you to reboot, which is
# inconvenient during an Ansible playbook.
#
# - name: Install Little Snitch
#   command:
#     argv: ['{{ macfit }}', '--cask', 'little-snitch',
#            '--run-bundle', 'Little Snitch Installer.app',
#            '--check-bundle-signature', '\(MLZF7K7B5R\)$']
#     creates: /Applications/Little Snitch Configuration.app

- name: Install Tunnelblick
  command:
    argv: ['{{ macfit }}', '--cask', 'tunnelblick',
           '--check-pkg-signature', '\(Z2SG5H3HC8\)$',
           '--check-bundle-signature', '\(Z2SG5H3HC8\)$']
    creates: /Applications/Tunnelblick.app
  become: yes
