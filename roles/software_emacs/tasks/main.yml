- name: Clone Emacs Git repo
  git:
    repo: https://git.savannah.gnu.org/git/emacs.git
    dest: '{{ emacs_src_dir }}'
    # update=yes will "git reset --hard", which could lose local commits.
    # Also, if Emacs.app already exists, maybe it's annoying to rebuild Emacs
    # too frequently.
    update: '{{ software_emacs_update_git }}'
  register: git_clone_emacs

- name: Install Emacs dependencies
  macports:
    state: present
    selfupdate: true
    name:
      - autoconf
      - automake
      - librsvg
      - ImageMagick
      - jansson
      - gnutls
      - libxml2
      - ccache
      - texinfo
      # org-mode needs this to build.
      - gnutar
  become: true
  tags: [slow]

- name: Check for Emacs.app installed
  stat:
    path: '{{ user_app_dir }}/Emacs.app'
  register: emacs_app_stat

- name: Build and install Emacs
  script: build_install_ns_port.sh
  args:
    chdir: '{{ emacs_src_dir }}'
  when: git_clone_emacs is changed or not emacs_app_stat.stat.exists

- name: Make bin directory
  file:
    state: directory
    path: '{{ user_bin_dir }}'

- name: Symlink emacsclient into bin directory
  file:
    state: link
    path: '{{ user_bin_dir }}/emacsclient'
    src: '{{ (user_app_dir + "/Emacs.app/Contents/MacOS/bin/emacsclient") | relpath(user_bin_dir) }}'

- name: Clone dot-emacs-d repository
  git:
    repo: '{{ dot_emacs_d_remote_repo }}'
    dest: '{{ dot_emacs_d_local_repo }}'
    update: no

- name: Clone org-mode repository
  git:
    repo: '{{ org_mode_remote_repo }}'
    dest: '{{ org_mode_local_repo }}'
    update: no
  register: git_org_mode

- name: Check for org-mode package and metadata
  find:
    paths:
      - '{{ org_mode_local_repo }}'
    use_regex: true
    patterns:
      - '^archive-contents$'
      - '^org-plus-contrib-20\d{6}.tar$'
  register: org_package_files

- name: Build org-mode package
  command: ./build-emacs-package.sh
  args:
    chdir: '{{ org_mode_local_repo }}'
  when: git_org_mode is changed or not (
            'archive-contents' in (org_package_files.files | map(attribute='path') | map('basename') | list)
            and org_package_files.matched >= 2
        )
